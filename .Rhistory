geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5)
ggplot(lmers, aes(x=values)) +
facet_wrap(~item, axes='all', axis.labels='all', scales='free') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5)
library(tidyverse)
library("ggmap")
library(maptools)
library(maps)
library(lme4)
require(gridExtra)
library(xtable)
library(lmerTest)
library(brms)
library(ggpubr)
library(ggplot2)
# to run this part, we need data from the original Finnish source
# d = read_csv("finnish_data/births.csv")
#
# # Use Convert Lats Lons.ipynb to get the good lat lon
# # convert using the genealogy repo from github.com/ekQ/genealogy.git
# parishes = read_csv("finnish_data/parish_with_lat_lon.csv") %>%
#   select(parish_id = id, name, lon=good_lon, lat=good_lat)
#
# d = left_join(d, parishes) %>%
#   filter(birth_year > 1000)
# length(unique(d$parish_id))
#
# d = select(d, birth_year,
#                   parish_id,
#                   child_first_nameN,
#                   dad_last_nameN,
#            lon, lat)
# write_csv(d, "data/finnish_data_selected.csv")
d = read_csv("data/finnish_data_selected.csv")
min(d$birth_year)
max(d$birth_year)
summary(d$birth_year)
nrow(d)
length(unique(d$child_first_nameN))
d$birth_year_cut = cut(d$birth_year, breaks = c(-Inf, 1730, 1780, 1830, 1880, Inf),
labels=c("up to 1730", "1730-1780", "1780-1830", "1830-1880", "post-1880"))
table(d$birth_year_cut) %>%
xtable()
# sample in groups of 50
samp_num = 50
set.seed(42)
s = group_by(d, parish_id, birth_year_cut) %>%
mutate(count = n()) %>%
filter(count >= samp_num) %>%
sample_n(samp_num)
length(table(s$parish_id))
nrow(s)
##########
d$hasLast = is.na(d$dad_last_nameN) == F
has.last.parishes = d %>%
group_by(parish_id, lon, lat, birth_year_cut) %>%
summarise(mean.hasLast = mean(hasLast, na.rm=T)) %>%
ungroup() %>%
mutate(`Proportion with hereditry patronym` = mean.hasLast,
) #scale(mean.hasLast)[, 1])
summary(lm(data=filter(has.last.parishes, birth_year_cut == "up to 1730"),
mean.hasLast ~ lon))
d$birth_year_cut_num = as.numeric(as.factor(d$birth_year_cut))
d$east.vs.west = ifelse(d$lon > median(d$lon, na.rm=T), "east", "west")
group_by(d, east.vs.west, birth_year_cut) %>%
summarise(mean.hasLast = mean(hasLast)) %>%
filter(is.na(east.vs.west) == F) %>%
spread(east.vs.west, mean.hasLast) %>%
xtable()
has.last.parishes$birth_year_cut_num = as.numeric(as.factor(has.last.parishes$birth_year_cut))
l.par = lmer(mean.hasLast ~ lon * birth_year_cut_num + (1 + birth_year_cut_num|parish_id),
data=has.last.parishes)
l.par.noint = lmer(mean.hasLast ~ lon + birth_year_cut_num + (1 + birth_year_cut_num|parish_id),
data=has.last.parishes)
summary(l.par)
anova(l.par, l.par.noint)
# calculate gradients:
has.last.parishes %>%
ggplot(aes(x=lon, y=mean.hasLast)) +
facet_wrap(~birth_year_cut) +
stat_cor(aes(label = paste(after_stat(r.label), after_stat(p.label), sep = "~`,`~")),
label.x=20, label.y=1.5, size=3, p.accuracy = 0.001) +
geom_smooth(method='lm') +
geom_point()
has.last.parishes %>%
ggplot(aes(x=lat, y=mean.hasLast)) +
facet_wrap(~birth_year_cut) +
stat_cor(aes(label = paste(after_stat(r.label), after_stat(p.label), sep = "~`,`~")),
label.x=60, label.y=1.5, size=3, p.accuracy = 0.001) +
geom_smooth(method='lm') +
geom_point()
summary(lm(data=has.last.parishes, mean.hasLast ~ lon))
p2 = ggplot(has.last.parishes %>%
group_by(birth_year_cut) %>%
mutate(mean_lon = mean(lon, na.rm=TRUE),
mean_lat = mean(lat, na.rm=TRUE),
birth_year_cut = factor(birth_year_cut,
levels=c('up to 1730',
'1730-1780',
'1780-1830',
'1830-1880',
'post-1880'))),
aes(x=lon, y=lat, colour=`Proportion with hereditry patronym`)) +
borders(regions = "Finland", colour = "gray50", fill = "gray50") +
geom_point() +
geom_segment(aes(x=mean_lon, y=mean_lat, xend=mean_lon, yend=mean_lat), arrow=arrow(length=unit(0.25, 'cm')), color='white') +
coord_quickmap() +
scale_colour_gradient2(
low = ("blue"),
mid = "white",
high = ("red"),
midpoint = .5,
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "colour"
)  +
theme_bw(12) +
facet_wrap(~birth_year_cut, ncol=5) +
xlab("Longitude") +
ylab("Latitude") +
theme(legend.position="bottom")
p2
# first name entropy (one sample)
first.ent = group_by(s, child_first_nameN, parish_id, birth_year_cut, lon, lat) %>%
summarise(freq = n()/samp_num) %>%
group_by(parish_id, birth_year_cut, lon, lat) %>%
summarise(first.ent = -sum(freq*log2(freq)),
n=n())
first.ent.early = first.ent
first.ent.early$first.ent.normalize = scale(first.ent.early$first.ent)
p1 = ggplot(first.ent.early, aes(x=lon, y=lat, colour=first.ent)) +
borders(regions = c("Finland"), colour = "gray50", fill = "gray50") +
geom_point(size=1) +
coord_quickmap() +
scale_colour_gradient2(
low = ("blue"),
mid = "white",
high = ("red"),
midpoint = median(first.ent.early$first.ent),
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "colour"
) +
theme_bw() +
facet_wrap(~birth_year_cut, ncol=5) +
xlab("Longitude") +
ylab("Latitude") +
labs(colour="Prefix-name entropy") +
theme(legend.position="bottom")
pdf("imgs/first_name_ent.pdf", width=7, height=4)
p1
dev.off()
#ggsave("imgs/first_name_ent.png", width=7, height=4)
summary(lm(data=first.ent.early, first.ent ~ lon))
summary(lm(data=first.ent.early, first.ent ~ lat))
set.seed(42)
first.ent.early$birthyearnum = as.numeric(as.factor(first.ent.early$birth_year_cut))
l = lmer(data=first.ent.early,
first.ent ~ birthyearnum * lon + (birthyearnum | parish_id),
REML= F)
l0 = lmer(data=first.ent.early,
first.ent ~ birthyearnum + lon + (birthyearnum | parish_id),
REML=F)
anova(l, l0)
summary(l)
pdf('imgs/figure3.pdf', width=7, height=8)
ggarrange(p2, p1, ncol=1, labels=c('a)', 'b)'))
dev.off()
# compare parishes lat name pct with first name ent
first.last = left_join(has.last.parishes, first.ent.early)
first.last$scale.first.ent = scale(first.last$first.ent)[, 1]
first.last$scale.pat = scale(first.last$`Proportion with hereditry patronym`)[, 1]
ggplot(first.last, aes(x=`scale.pat`, y=scale.first.ent)) +
geom_point() +
geom_smooth(method=lm) +
stat_cor(aes(label = paste(after_stat(r.label), after_stat(p.label), sep = "~`,`~")),
label.x=-1.5, label.y=3, size=3, p.accuracy = 0.001) +
theme_classic(18) +
xlab('normalized percentage of byname') +
ylab('normalized prefix-name entropy')
summary(lm(first.last$scale.pat ~  first.last$scale.first.ent))
dplyr::select(first.last, scale.pat, lon, scale.first.ent, birth_year_cut) %>%
na.omit() %>%
group_by(birth_year_cut) %>%
summarise(`Corr: Patronyms:FirstNameEnt`=cor(scale.pat, scale.first.ent, method="spearman"),
`Corr: Patronyms:Longitude` = cor(scale.pat, lon, method="spearman"),
`Corr: FirstNameEnt:Longitude` = cor(scale.first.ent, lon, method="spearman")) %>%
xtable()
dplyr::select(first.last, scale.pat, lon, birth_year_cut) %>%
na.omit() %>%
group_by(birth_year_cut) %>%
summarise(cor=cor(scale.pat, lon, method="spearman")) %>%
xtable()
dplyr::select(first.last, scale.first.ent, lon, birth_year_cut) %>%
na.omit() %>%
group_by(birth_year_cut) %>%
summarise(cor=cor(scale.first.ent, lon, method="spearman")) %>%
xtable()
# repeat the analysis 10000 times
set.seed(420)
n_repetitions <- 500
corrs <- tibble()
lmers <- tibble()
for (i in 1:n_repetitions){
# sample in groups of 50
samp_num = 50
sample.temp = group_by(d, parish_id, birth_year_cut) %>%
mutate(count = n()) %>%
filter(count >= samp_num) %>%
sample_n(samp_num)
first.ent.temp = group_by(sample.temp, child_first_nameN, parish_id, birth_year_cut, lon, lat) %>%
summarise(freq = n()/samp_num) %>%
group_by(parish_id, birth_year_cut, lon, lat) %>%
summarise(first.ent = -sum(freq*log2(freq)),
n=n()) %>%
ungroup() %>%
mutate(first.ent.normalize = scale(first.ent)[, 1],
birthyearnum = as.numeric(as.factor(birth_year_cut)))
first.last.temp <- has.last.parishes %>% left_join(first.ent.temp) %>%
mutate(pat.normalize = scale(`Proportion with hereditry patronym`)[,1]) %>%
dplyr::select(pat.normalize, lon, first.ent.normalize, birth_year_cut) %>%
na.omit() %>%
group_by(birth_year_cut) %>%
summarise(`Patronyms:FirstNameEnt`=cor(pat.normalize, first.ent.normalize, method="spearman"),
`Patronyms:Longitude` = cor(pat.normalize, lon, method="spearman"),
`FirstNameEnt:Longitude` = cor(first.ent.normalize, lon, method="spearman")) %>%
pivot_longer(cols = -birth_year_cut, names_to = 'corr', values_to = 'values') %>%
mutate(sample_number= i)
l_temp = lmer(data=first.ent.temp,
first.ent ~ birthyearnum * lon + (birthyearnum | parish_id),
REML= F)
l0_temp = lmer(data=first.ent.temp,
first.ent ~ birthyearnum + lon + (birthyearnum | parish_id),
REML=F)
anova_temp <- anova(l_temp, l0_temp)
summary_temp <- summary(l_temp)
lmer_temp <- tibble(
sample_number = i,
category = c('slope estimate', 'p_value', 'slope estimate', 'p_value', 'slope estimate', 'p_value', 'p_value'),
item = c('r_birthyearnum', 'p_birthyearnum', 'r_lon', 'p_lon', 'r_birthyearnum:lon', 'p_birthyearnum:lon', 'p_anova'),
values = c(
summary_temp$coefficients[2,1], summary_temp$coefficients[2,5], summary_temp$coefficients[3,1], summary_temp$coefficients[3,5],
summary_temp$coefficients[4,1], summary_temp$coefficients[4,5], anova_temp$`Pr(>Chisq)`[2]
)
)
corrs <- rbind(corrs, first.last.temp)
lmers <- rbind(lmers, lmer_temp)
}
# saveRDS(corrs, file='corrs.rds')
# saveRDS(lmers, file='lmers.rds')
#
# corrs <- readRDS('corrs.rds')
# lmers <- readRDS('lmers.rds')
pdf('imgs/corr_sample.pdf', height=6, width=10)
ggplot(corrs, aes(x=values)) +
facet_grid(cols=vars(birth_year_cut), rows=vars(corr), scales = 'free_y') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5)
dev.off()
ggplot(lmers, aes(x=values)) +
facet_wrap(~item, axes='all', axis.labels='all', scales='free') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5)
ggplot(corrs, aes(x=values)) +
facet_grid(cols=vars(birth_year_cut), rows=vars(corr), scales = 'free_y') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5)
ggplot(lmers, aes(x=values)) +
facet_wrap(~item, axes='all', axis.labels='all', scales='free') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5)
ggplot(corrs, aes(x=values)) +
facet_grid(cols=vars(birth_year_cut), rows=vars(corr), scales = 'free_y') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5) +
theme_bw(15)
pdf('imgs/corr_sample.pdf', height=6, width=10)
ggplot(corrs, aes(x=values)) +
facet_grid(cols=vars(birth_year_cut), rows=vars(corr), scales = 'free_y') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5) +
theme_bw(15)
dev.off()
ggplot(corrs, aes(x=values)) +
facet_grid(cols=vars(birth_year_cut), rows=vars(corr), scales = 'free_y') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5) +
theme_bw(10)
pdf('imgs/corr_sample.pdf', height=6, width=10)
ggplot(corrs, aes(x=values)) +
facet_grid(cols=vars(birth_year_cut), rows=vars(corr), scales = 'free_y') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5) +
theme_bw(10)
dev.off()
ggplot(lmers, aes(x=values)) +
facet_wrap(~item, axes='all', axis.labels='all', scales='free') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5)  +
theme_bw(10)
ggplot(lmers, aes(x=values)) +
facet_wrap(~item, axes='all', axis.labels='all', scales='free') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5)  +
theme_bw(15)
pdf('imgs/corr_sample.pdf', height=6, width=10)
ggplot(corrs, aes(x=values)) +
facet_grid(cols=vars(birth_year_cut), rows=vars(corr), scales = 'free_y') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5) +
theme_bw(10)
dev.off()
pdf('imgs/lmer_sample.pdf', height=6, width=10)
ggplot(lmers, aes(x=values)) +
facet_wrap(~item, axes='all', axis.labels='all', scales='free') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5)  +
theme_bw(10)
dev.off()
p_corrs <- ggplot(corrs, aes(x=values)) +
facet_grid(cols=vars(birth_year_cut), rows=vars(corr), scales = 'free_y') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5) +
theme_bw(10)
p_lmers <- ggplot(lmers, aes(x=values)) +
facet_wrap(~item, axes='all', axis.labels='all', scales='free') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5)  +
theme_bw(10)
p_corrs <- ggplot(corrs, aes(x=values)) +
facet_grid(cols=vars(birth_year_cut), rows=vars(corr), scales = 'free_y') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5) +
theme_bw(10)
p_lmers <- ggplot(lmers, aes(x=values)) +
facet_wrap(~item, axes='all', axis.labels='all', scales='free') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5)  +
theme_bw(10)
pdf('imgs/bootstrap.pdf', height=12, width=10)
ggarrange(p_lmers, p_corrs, ncol=1, labels=c('a)', 'b)'))
dev.off()
pdf('imgs/bootstrap.pdf', height=12, width=10)
ggarrange(p_lmers, p_corrs, ncol=1, labels=c('a)', 'b)'))
dev.off()
p_corrs <- ggplot(corrs, aes(x=values)) +
facet_grid(cols=vars(birth_year_cut), rows=vars(corr), scales = 'free_y') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5) +
theme_bw(10)
p_lmers <- ggplot(lmers, aes(x=values)) +
facet_wrap(~item, axes='all', axis.labels='all', scales='free') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
theme_bw(10)
pdf('imgs/bootstrap.pdf', height=12, width=10)
ggarrange(p_lmers, p_corrs, ncol=1, labels=c('a)', 'b)'))
dev.off()
### 100 births
# repeat the analysis 500 times
set.seed(420)
n_repetitions <- 500
corrs <- tibble()
lmers <- tibble()
for (i in 1:n_repetitions){
# sample in groups of 100
samp_num = 100
sample.temp = group_by(d, parish_id, birth_year_cut) %>%
mutate(count = n()) %>%
filter(count >= samp_num) %>%
sample_n(samp_num)
first.ent.temp = group_by(sample.temp, child_first_nameN, parish_id, birth_year_cut, lon, lat) %>%
summarise(freq = n()/samp_num) %>%
group_by(parish_id, birth_year_cut, lon, lat) %>%
summarise(first.ent = -sum(freq*log2(freq)),
n=n()) %>%
ungroup() %>%
mutate(first.ent.normalize = scale(first.ent)[, 1],
birthyearnum = as.numeric(as.factor(birth_year_cut)))
first.last.temp <- has.last.parishes %>% left_join(first.ent.temp) %>%
mutate(pat.normalize = scale(`Proportion with hereditry patronym`)[,1]) %>%
dplyr::select(pat.normalize, lon, first.ent.normalize, birth_year_cut) %>%
na.omit() %>%
group_by(birth_year_cut) %>%
summarise(`Patronyms:FirstNameEnt`=cor(pat.normalize, first.ent.normalize, method="spearman"),
`Patronyms:Longitude` = cor(pat.normalize, lon, method="spearman"),
`FirstNameEnt:Longitude` = cor(first.ent.normalize, lon, method="spearman")) %>%
pivot_longer(cols = -birth_year_cut, names_to = 'corr', values_to = 'values') %>%
mutate(sample_number= i)
l_temp = lmer(data=first.ent.temp,
first.ent ~ birthyearnum * lon + (birthyearnum | parish_id),
REML= F)
l0_temp = lmer(data=first.ent.temp,
first.ent ~ birthyearnum + lon + (birthyearnum | parish_id),
REML=F)
anova_temp <- anova(l_temp, l0_temp)
summary_temp <- summary(l_temp)
lmer_temp <- tibble(
sample_number = i,
category = c('slope estimate', 'p_value', 'slope estimate', 'p_value', 'slope estimate', 'p_value', 'p_value'),
item = c('r_birthyearnum', 'p_birthyearnum', 'r_lon', 'p_lon', 'r_birthyearnum:lon', 'p_birthyearnum:lon', 'p_anova'),
values = c(
summary_temp$coefficients[2,1], summary_temp$coefficients[2,5], summary_temp$coefficients[3,1], summary_temp$coefficients[3,5],
summary_temp$coefficients[4,1], summary_temp$coefficients[4,5], anova_temp$`Pr(>Chisq)`[2]
)
)
corrs <- rbind(corrs, first.last.temp)
lmers <- rbind(lmers, lmer_temp)
}
p_corrs <- ggplot(corrs, aes(x=values)) +
facet_grid(cols=vars(birth_year_cut), rows=vars(corr), scales = 'free_y') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5) +
theme_bw(10)
p_lmers <- ggplot(lmers, aes(x=values)) +
facet_wrap(~item, axes='all', axis.labels='all', scales='free') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
theme_bw(10)
pdf('imgs/bootstrap_100.pdf', height=12, width=10)
ggarrange(p_lmers, p_corrs, ncol=1, labels=c('a)', 'b)'))
dev.off()
# repeat the analysis 500 times
bootstrap_analysis <- function(n_repetitions=500, samp_num = 50, filename = 'imgs/boostrap.pdf'){
set.seed(420)
n_repetitions <- 500
corrs <- tibble()
lmers <- tibble()
for (i in 1:n_repetitions){
# sample in groups of 50
samp_num = 50
sample.temp = group_by(d, parish_id, birth_year_cut) %>%
mutate(count = n()) %>%
filter(count >= samp_num) %>%
sample_n(samp_num)
first.ent.temp = group_by(sample.temp, child_first_nameN, parish_id, birth_year_cut, lon, lat) %>%
summarise(freq = n()/samp_num) %>%
group_by(parish_id, birth_year_cut, lon, lat) %>%
summarise(first.ent = -sum(freq*log2(freq)),
n=n()) %>%
ungroup() %>%
mutate(first.ent.normalize = scale(first.ent)[, 1],
birthyearnum = as.numeric(as.factor(birth_year_cut)))
first.last.temp <- has.last.parishes %>% left_join(first.ent.temp) %>%
mutate(pat.normalize = scale(`Proportion with hereditry patronym`)[,1]) %>%
dplyr::select(pat.normalize, lon, first.ent.normalize, birth_year_cut) %>%
na.omit() %>%
group_by(birth_year_cut) %>%
summarise(`Patronyms:FirstNameEnt`=cor(pat.normalize, first.ent.normalize, method="spearman"),
`Patronyms:Longitude` = cor(pat.normalize, lon, method="spearman"),
`FirstNameEnt:Longitude` = cor(first.ent.normalize, lon, method="spearman")) %>%
pivot_longer(cols = -birth_year_cut, names_to = 'corr', values_to = 'values') %>%
mutate(sample_number= i)
l_temp = lmer(data=first.ent.temp,
first.ent ~ birthyearnum * lon + (birthyearnum | parish_id),
REML= F)
l0_temp = lmer(data=first.ent.temp,
first.ent ~ birthyearnum + lon + (birthyearnum | parish_id),
REML=F)
anova_temp <- anova(l_temp, l0_temp)
summary_temp <- summary(l_temp)
lmer_temp <- tibble(
sample_number = i,
category = c('slope estimate', 'p_value', 'slope estimate', 'p_value', 'slope estimate', 'p_value', 'p_value'),
item = c('r_birthyearnum', 'p_birthyearnum', 'r_lon', 'p_lon', 'r_birthyearnum:lon', 'p_birthyearnum:lon', 'p_anova'),
values = c(
summary_temp$coefficients[2,1], summary_temp$coefficients[2,5], summary_temp$coefficients[3,1], summary_temp$coefficients[3,5],
summary_temp$coefficients[4,1], summary_temp$coefficients[4,5], anova_temp$`Pr(>Chisq)`[2]
)
)
corrs <- rbind(corrs, first.last.temp)
lmers <- rbind(lmers, lmer_temp)
}
p_corrs <- ggplot(corrs, aes(x=values)) +
facet_grid(cols=vars(birth_year_cut), rows=vars(corr), scales = 'free_y') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
geom_vline(xintercept = 0, linetype = 'dashed', alpha=0.5) +
theme_bw(10)
p_lmers <- ggplot(lmers, aes(x=values)) +
facet_wrap(~item, axes='all', axis.labels='all', scales='free') +
geom_histogram(aes(y=after_stat(density)), fill='#002f6c') +
geom_density(alpha=0.6) +
theme_bw(10)
pdf(filename, height=12, width=10)
ggarrange(p_lmers, p_corrs, ncol=1, labels=c('a)', 'b)'))
dev.off()
}
